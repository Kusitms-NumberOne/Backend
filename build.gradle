plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'com.google.cloud.tools.jib' version '3.4.0'
}

group = 'com.numberone'
version = '0.0.1-SNAPSHOT'

jib {
	from {
		image = "openjdk:17-alpine"
	}
	to {
		image = "versatile0010/numberone"
		credHelper = 'ecr-login'
		tags = ["latest"]
	}
	container {
		jvmFlags = ["-Duser.timezone=Asia/Seoul", "-Xms2048m", "-Xmx2048m"]
	}
}



java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

	// jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// queryDSL
	implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.8'

	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	annotationProcessor 'org.projectlombok:lombok'

	compileOnly 'org.projectlombok:lombok'

	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'


	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'com.sun.xml.bind:jaxb-impl:4.0.1'
	implementation 'com.sun.xml.bind:jaxb-core:4.0.1'
	implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

	// cloud
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	// aop
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	//crawling
	implementation 'com.squareup.okhttp3:okhttp:4.9.1'
	implementation 'org.jsoup:jsoup:1.14.2'
	implementation 'net.sourceforge.htmlunit:htmlunit:2.70.0'

	//geocoding
	implementation 'com.google.code.geocoder-java:geocoder-java:0.16'
	// fcm
	implementation 'com.google.firebase:firebase-admin:9.1.1'
}

tasks.named('test') {
	useJUnitPlatform()
}

// Querydsl 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
	main.java.srcDirs += [ generated ]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
	delete file(generated)
}